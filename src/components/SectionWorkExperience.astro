---
import SectionWork from './SectionWork.astro'
import { isNewJob, getWorkPeriod } from '../utils/dateUtils'
import { getLangFromUrl, useTranslations } from '../i18n/utils'

interface Props {
  workExperience: any[]
}

const { workExperience } = Astro.props
const langName = getLangFromUrl(Astro.url)
const t = useTranslations(langName)
---

<section class="pt-8 md:pt-12 pb-6 md:pb-10">
  <div class="max-w-7xl mx-auto px-4 md:grid md:grid-cols-12 md:gap-x-8 md:gap-y-1">
    <div class="md:col-span-3 mb-2">
      <h2 class="text-gray-800 dark:text-gray-200 uppercase md:text-right">{t('experience')}</h2>
    </div>
    <div class="md:col-span-9 mb-2 hidden md:block"></div>
    {
      workExperience.map((e) =>
        e.pagebreak ? (
          <p class="pagebreak md:col-span-12" />
        ) : (
          <div class="contents md:col-span-12">
            {!e.jobs && (
              <>
                <div class="md:col-span-3 mb-2 md:mb-0">
                  <small class="block -mt-1 mb-1 text-xs font-medium text-gray-600 dark:text-gray-400 tracking-wide uppercase md:text-right">
                    {getWorkPeriod(e.range, langName, t)}
                  </small>
                  <h3 class="text-base font-bold text-gray-800 dark:text-gray-200 tracking-wide uppercase leading-snug md:text-right">
                    {e.job}
                  </h3>
                  <h4 class="text-sm md:text-base font-medium text-gray-700 dark:text-gray-300 leading-tight md:text-right">{e.work}</h4>
                  {isNewJob(e.range.begin) && (
                    <span class="inline-block mt-1 text-[10px] font-semibold tracking-wide rounded bg-green-100 text-green-700 dark:bg-green-800/40 dark:text-green-300 px-1.5 py-0.5 uppercase">
                      {t('experience.newjob')}
                    </span>
                  )}
                </div>
                <article class="md:col-span-9 relative md:border-l-2 border-gray-300 dark:border-gray-600 group mb-8 last:mb-0">
                  <div class="text-sm text-gray-700 dark:text-gray-300 leading-relaxed">
                    <SectionWork filename={e.file} />
                  </div>
                </article>
              </>
            )}
            {e.jobs && (
              <>
                <div class="md:col-span-3">
                  <h4 class="text-sm md:text-base font-medium text-gray-700 dark:text-gray-300 leading-tight md:text-right">{e.work}</h4>
                </div>
                <div class="md:col-span-9 hidden md:block" />
                {e.jobs.map((j) => (
                  <>
                    <div class="md:col-span-3 mb-2 md:mb-0">
                      <small class="block -mt-1 mb-1 text-[11px] font-medium text-gray-600 dark:text-gray-400 tracking-wide uppercase md:text-right">
                        {getWorkPeriod(j.range, langName, t)}
                      </small>
                      <h3 class="text-sm font-semibold text-gray-800 dark:text-gray-200 uppercase tracking-wide leading-snug md:text-right">
                        {j.job}
                      </h3>
                      {isNewJob(j.range.begin) && (
                        <span class="inline-block mt-1 text-[10px] font-semibold tracking-wide rounded bg-green-100 text-green-700 dark:bg-green-800/40 dark:text-green-300 px-1.5 py-0.5 uppercase">
                          {t('experience.newjob')}
                        </span>
                      )}
                    </div>
                    <article class="md:col-span-9 relative md:border-l-2 border-gray-300 dark:border-gray-600 group mb-8 last:mb-0">
                      <div class="text-sm text-gray-700 dark:text-gray-300 leading-relaxed">
                        <SectionWork filename={j.file} />
                      </div>
                    </article>
                  </>
                ))}
              </>
            )}
          </div>
        ),
      )
    }
  </div>
</section>
<style>
  .pagebreak {
    margin: 0px;
    page-break-before: always;
  }
</style>
