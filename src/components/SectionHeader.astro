---
import dayjs from 'dayjs'
import numeral from 'numeral'
import ThemeIcon from './ThemeIcon.astro'
import { languages } from '../i18n/ui'
import { getLangFromUrl, getTranslate } from '../i18n/utils'
const langName = getLangFromUrl(Astro.url)
const t = getTranslate(Astro.url)

import 'dayjs/locale/th'

import { Image } from 'astro:assets'
import photo from '../assets/kk_00248.webp'


const showAge = () => birthday.fromNow(true)
const showBirthday = () => langName === 'en' ? birthday.locale('en').format('MMMM DD, YYYY') : birthday.add(543, 'y').locale('th').format('DD MMMM YYYY')

// const availableLocales = () => {
//   return this.$i18n.locales.filter(i => i.code === this.$i18n.locale)
// }
const showNationalD = () => {
  let regex: RegExp = /(\d)(\d{4})(\d{5})(\d{2})(\d{1}).*/ig
  const [ , ...id ]: any = regex.exec(resume.national_id)
  return id.join(' ')
}

const showSalary = async () => {
  const { base, day, hour } = experience.salary
  if (langName == 'en') {
    const usdt = await fetch('https://api.bitkub.com/api/market/ticker?sym=THB_USDT')
    const res = await usdt.json()

    const perHour = Math.round(base / day / hour / res['THB_USDT'].last * 100) / 100
    return `${t('head.salary.currency')}${perHour} ${t('head.salary.hour')}`
  } else {
    const perHour = Math.round(base / day / hour * 100) / 100
    return `${perHour} ${t('head.salary.currency')}${t('head.salary.hour')}`
  }
}
const showSalaryFull = () => {
  return `${numeral(experience.salary.base).format('0,0')} THB`
}
const showExpect = () => {
  return `${numeral(experience.salary.expect).format('0,0')} THB`
}

const { experience, resume } = Astro.props
const birthday = dayjs(experience.birthday)
---
<section class="py-4">
  <div class="container mx-auto mt-12">
    <div class="flex flex-wrap">
      <div class="lg:w-1/4 md:w-1/3 w-full">
        <div class="justify-end md:flex print:hidden">
          <Image src={photo} width={510} height={620} loading="lazy" alt="" />
        </div>
      </div>
      <div class="lg:w-3/4 md:w-2/3 w-full my-4 md:my-0">
        <div class="flex items-center gap-2 mb-2">
          <h1 class="uppercase text-primary text-2xl leading-8 my-0 th-label">{resume.fullname}</h1>
          <ul class="print:hidden -mt-2.5">
            <li><a href={langName==='en'?'/th':'/'} class="w-9 h-9 leading-9 block text-sm text-menu text-center rounded border-2 border-menu-border font-bold hover:border-menu-border-hover">{languages[langName]}</a></li>
          </ul>
        </div>
        <span class="print:hidden text-xl text-link th-label">{resume.job}</span>
        <span class="hidden print:block text-2xl th-label th-name">{resume.fullname_th}</span>
        <div class="print:hidden mt-1 flex gap-1">
          <img alt="wakatime" loading="lazy" height={20} src="https://wakatime.com/badge/user/06633b1c-3ba7-44c2-ab5d-08e47ccc87ab.svg?style=flat-square&color=blue" />
          <img alt="follow" loading="lazy" height={20} width={100} src="https://img.shields.io/github/followers/dvgamerr?logo=github&style=flat-square&color=yellow" />
          <img alt="counter" loading="lazy" height={20} src={`https://api.visitorbadge.io/api/visitors?path=${Astro.url.host}&label=visitors&countColor=%2337d67a&style=flat-square`} />
        </div>
        <p contenteditable="false" class="mt-3">{resume.detail}</p>
        <div>
          <div class="grid grid-cols-3 gap-x-1 gap-y-1">
            <div class="my-2.5">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none print:hidden">{resume.nickname}</strong>
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none hidden print:block">{resume.nickname}&nbsp;{langName === 'en' ? (<span class="th-label">({resume.nickname_th})</span>) : (<span />)}</strong>
              <small class="uppercase font-normal text-xs">{t('head.nickname')}</small>
            </div>
            <div class="my-2.5">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">{showBirthday}</strong>
              <small class="uppercase font-normal text-xs">{t('head.age')}&nbsp;{showAge().replace('years', t('head.age.old'))}</small>
            </div>
            <div class="my-2.5">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">
                {Object.keys(resume.language).map(e => (
                <div class="inline-flex mr-1.5 gap-0.5 items-center"> <span class="uppercase text-secondary">{e}</span> <small class="md:block hidden uppercase">({resume.language[e]})</small> </div>
                ))}
              </strong>
              <small class="uppercase font-normal text-xs">{t('head.language')}</small>
            </div>
            <div class="my-2.5 hidden print:block">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">{resume.religion}</strong>
              <small class="uppercase font-normal text-xs">{t('head.religion')}</small>
            </div>
            <div class="my-2.5 hidden print:block">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">{resume.national}</strong>
              <small class="uppercase font-normal text-xs">{t('head.nationality')}</small>
            </div>
            <div class="my-2.5 hidden print:block">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">{showNationalD}</strong>
              <small class="uppercase font-normal text-xs">{t('head.national_id')}</small>
            </div>
            <div class="my-2.5">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">{resume.location}</strong>
              <small class="uppercase font-normal text-xs">{t('head.location')}</small>
            </div>
            <div class="my-2.5">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none print:hidden">{showSalary}</strong>
              <small class="uppercase font-normal text-xs print:hidden">{t('head.income')}</small>
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none hidden print:block">{showSalaryFull}</strong>
              <small class="uppercase font-normal text-xs hidden print:block">{t('head.salary')}</small>
            </div>
            <div class="my-2.5 hidden print:block">
              <strong class="uppercase text-sm font-bold text-secondary-value block leading-none">{showExpect}</strong>
              <small class="uppercase font-normal text-xs">{t('head.salary.expect')}</small>
            </div>
            <div class="my-2.5 print:hidden">
              {experience.interview ? (<span class="text-white bg-green-500 inline-block py-1 px-1.5 -mt-1 mb-0.5">{t('head.availability.yes')}</span>) : (<span class="text-white bg-red-500 inline-block py-1 px-1.5 -mt-1 mb-0.5">{t('head.availability.no')}</span>)}
              <small class="uppercase font-normal text-xs">{t('head.availability')}</small>
            </div>
          </div>

          <ul class="flex flex-row gap-1.5 my-3 print:hidden">
            <li d-asd={"ðŸ“„ If you want a CV"}>
              <a href="#" rel="noopener noreferrer" id="on-printer" class="block text-sm text-menu leading-[2.1rem] py-0.5 px-3 rounded border-2 border-menu-border font-bold text-center relative overflow-hidden z-10 hover:border-menu-border-hover group">
                <svg class="icon transition-all duration-300 group-hover:text-white group-hover:rotate-y-180 z-[3]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="-0.5 -0.5 14 14" height="14" width="14">
                  <g id="printer">
                    <path class="Vector139 stroke-black dark:stroke-white" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" d="M2.761571428571429 4.570428571428572c-0.21542857142857144 -1.1375000000000002 -0.23214285714285715 -1.8877857142857142 -0.08635714285714285 -2.9120000000000004a0.8914285714285715 0.8914285714285715 0 0 1 0.7911428571428571 -0.7540000000000001C5.731142857142857 0.6574285714285714 7.254928571428572 0.65 9.511357142857143 0.8997857142857143c0.4150714285714286 0.04642857142857143 0.7484285714285716 0.3695714285714286 0.7948571428571428 0.7855714285714286 0.117 1.030714285714286 0.10214285714285715 1.776357142857143 -0.07150000000000001 2.885071428571429" stroke-width="1"></path>
                    <path class="Vector138 stroke-black dark:stroke-white" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" d="M2.4430714285714283 10.474285714285713A1.8571428571428572 1.8571428571428572 0 0 1 0.6964285714285714 8.619V7.3125c0 -1.3928571428571428 0.4615 -2.572142857142857 2.3214285714285716 -2.7857142857142856 2.7225714285714284 -0.31200000000000006 4.243571428571429 -0.30828571428571433 6.964285714285714 0 1.8450714285714287 0.20892857142857144 2.3214285714285716 1.3928571428571428 2.3214285714285716 2.7857142857142856v1.3074285714285714a1.8571428571428572 1.8571428571428572 0 0 1 -1.7466428571428572 1.8534285714285714" stroke-width="1"></path>
                    <path class="Vector140 stroke-black dark:stroke-white" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round" d="M10.254214285714285 9.278285714285715c0.22378571428571428 0.5385714285714286 0.34264285714285714 1.262857142857143 0.3927857142857143 1.9565000000000003 0.03621428571428571 0.48471428571428576 -0.3435714285714286 0.8895714285714286 -0.8264285714285715 0.9220714285714285 -2.4746428571428574 0.16528571428571429 -4.1665 0.1662142857142857 -6.640214285714285 0 -0.48471428571428576 -0.0325 -0.8635714285714287 -0.43735714285714283 -0.8273571428571429 -0.9211428571428572 0.05014285714285714 -0.6927142857142857 0.16807142857142857 -1.417 0.39185714285714285 -1.9546428571428571 0.22285714285714286 -0.5348571428571428 0.8032142857142858 -0.7521428571428572 1.3789285714285715 -0.8190000000000001 1.7262142857142857 -0.20057142857142857 2.99 -0.20614285714285716 4.756142857142857 0 0.5729285714285715 0.06685714285714285 1.1514285714285715 0.28414285714285714 1.3742857142857143 0.8162142857142858Z" stroke-width="1"></path>
                  </g>
                </svg>
                <span class="absolute inset-0 w-full h-full bg-[#3b5999] -top-full left-0 transition-all duration-300 z-[2] group-hover:top-0"></span>
              </a>
            </li>
            <ThemeIcon />
          </ul>
        </div>

      </div>

    </div>
    <notifications position="bottom right"/>
  </div>
</section>

<script is:inline define:vars={{ requestPath: 'https://api.bitkub.com/api/market/ticker?sym=THB_USDT' }}>
  document.getElementById('on-printer').addEventListener('click', e => {
    e.preventDefault()
    print()
  })
  
  setTimeout(async () => {
    const usdt = await fetch(requestPath)
    const res = await usdt.json()
    console.log({ THB_USDT: res['THB_USDT'].last })
  }, 1);
</script>
