---
import githubIco from '../../assets/icon/github.svg?raw'
import devToIco from '../../assets/icon/dev-to.svg?raw'
import wakatimeIco from '../../assets/icon/wakatime.svg?raw'
import instagramIco from '../../assets/icon/instagram.svg?raw'
import emailIco from '../../assets/icon/email.svg?raw'
import mobileIco from '../../assets/icon/mobile.svg?raw'

import { getTranslate } from '../../i18n/utils'
const t = getTranslate(Astro.url)

const iconAssets = {
  github: githubIco,
  devto: devToIco,
  wakatime: wakatimeIco,
  instagram: instagramIco,
  email: emailIco,
  mobile: mobileIco,
}

const filterPrint = (e: any) => e.label !== 'MOBILE' && e.label !== 'EMAIL'

const getContactPrint = () => {
  return experience.contact.filter((e: any) => e.print && filterPrint(e))
}
const getTel = () => {
  return experience.contact.filter((e: any) => e.print && !filterPrint(e))
}
const getContactView = () => {
  return experience.contact.filter((e: any) => !e.print)
}

interface Props {
  experience: any
}

const { experience } = Astro.props
---

<section class="pt-8 md:pt-12 pb-4 md:pb-8">
  <div class="max-w-7xl mx-auto px-4">
    <div class="md:grid md:grid-cols-12 md:gap-8">
      <div class="md:col-span-3 mb-6 md:mb-0">
        <h2 class="min-w-[175px] text-[1.2rem] -mt-0.5 text-gray-800 dark:text-gray-200 uppercase md:text-right">
          {t('contact')}
        </h2>
      </div>
      <div class="md:col-span-9">
        <div class="grid sm:grid-cols-2 xl:grid-cols-4 print:grid-cols-3 gap-2">
          {
            getContactPrint()
              .filter((e: any) => e.qrcode)
              .map((e: any) => (
                <div class="hidden print:block">
                  <img src={e.qrcode} height="160" alt={`QR ${e.label}`} data-not-lazy />
                </div>
              ))
          }
          <div class="hidden print:block">
            {
              getContactPrint()
                .filter((e: any) => !e.qrcode)
                .map((e: any) => (
                  <div class="my-5">
                    <strong>{t(`contact.${(e.label as string).toLowerCase()}` as any)}</strong>
                    <a href={e.url} target={filterPrint(e) ? '_blank' : ''} class="flex items-start justify-start gap-1">
                      <div set:html={iconAssets[e.icon || 'chrome']} class="w-4 mx-1 my-1 text-gray-800 dark:text-gray-200 " />
                      <div class="pt-0.5 print:text-gray-950">{e.text}</div>
                    </a>
                  </div>
                ))
            }
          </div>
          {
            getContactView().map((e: any) => (
              <div class="print:hidden">
                <span class="font-bold text-sm uppercase">{t(`contact.${e.label.toLowerCase()}` as any)}</span>
                <br />
                <a href={e.url} target={filterPrint(e) ? '_blank' : ''} class="flex items-start justify-start gap-1">
                  <div set:html={iconAssets[e.icon || 'chrome']} class="w-4 my-1 text-gray-800 dark:text-gray-200 " />
                  <div class="pt-0.5 print:text-gray-950">{e.text}</div>
                </a>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  @media print {
    address a {
      color: inherit !important;
    }
  }
</style>
