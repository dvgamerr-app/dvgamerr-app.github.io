---
import { getTranslate } from '../../i18n/utils'
const t = getTranslate(Astro.url)

interface Props {
  experience: any
}

const { experience } = Astro.props

const skillList = Object.keys(experience.skill)
---

<section class="pt-8 md:pt-12 pb-4 md:pb-8">
  <div class="max-w-7xl mx-auto px-4">
    <div class="md:grid md:grid-cols-12 md:gap-8 items-start">
      <div class="md:col-span-3 mb-6 md:mb-0">
        <h2 class="-mt-0.5 text-gray-800 dark:text-gray-200 uppercase md:text-right">
          {t('skills')}
        </h2>
      </div>
      <div class="md:col-span-9">
        <div class="grid gap-6 sm:grid-cols-2 xl:grid-cols-2">
          {
            skillList.map((e: string) => {
              const list = experience.skill[e].filter((s: string) => !['hack'].includes(s.toLowerCase())).sort()
              if (!list.length) return null
              return (
                <div class="group">
                  <h3 class="mb-2 font-semibold uppercase tracking-widest text-gray-500 dark:text-gray-400  transition-colors">
                    {t(`skills.${e}` as any)}
                  </h3>
                  <ul class="flex flex-wrap gap-1.5 print:gap-y-0 print:gap-x-1">
                    {list.map((l: string) => (
                      <li class="skills-badge select-none rounded-sm bg-gray-100/70 px-2 pt-1 pb-0.5 text-[0.75rem] text-gray-700 ring-1 ring-gray-200/70 backdrop-blur-sm transition hover:bg-indigo-50  dark:bg-gray-800/60 dark:text-gray-300 dark:ring-gray-700/70  print:bg-transparent print:ring-0 print:shadow-none print:backdrop-blur-none dark:print:bg-transparent print:text-black dark:print:text-black print:px-0">
                        {l}
                      </li>
                    ))}
                  </ul>
                </div>
              )
            })
          }
        </div>
      </div>
    </div>
  </div>
</section>
<style>
  @media print {
    .skills-badge::after {
      content: ',';
    }
    .skills-badge:last-child::after {
      content: '';
    }
  }
</style>
