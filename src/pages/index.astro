---
import dayjs from 'dayjs'
import "dayjs/locale/th";
import Layout from '../layouts/Layout.astro'
import SectionHeader from '../components/SectionHeader.astro'
import SectionProject from '../components/SectionProject.astro'
import SectionContact from '../components/SectionContact.astro'
import SectionCoding from '../components/SectionCoding.astro'
import SectionDaytime from '../components/SectionCodingDaytime.astro'
import SectionHistory from '../components/SectionCodingHistory.astro'
import SectionSkill from '../components/SectionSkill.astro'
import SectionEducation from '../components/SectionEducation.astro'
import SectionFooter from '../components/SectionFooter.astro'
import SectionWork from '../components/SectionWork.astro'

import { getLangFromUrl, useTranslations } from '../i18n/utils'
const langName = getLangFromUrl(Astro.url)
const t = useTranslations(langName)

dayjs.locale(langName)

const isNewJob = (begin:string) => dayjs(begin).diff(dayjs(), 'second') > 0

const getWorkPeriod = ({ begin, quit }: { begin: string, quit: string | undefined }) => {
  if (isNewJob(begin)) return `Start in ${dayjs(begin).fromNow(true)}`

  // Adjust year for Thai calendar if needed
  const yearOffset = langName == 'th' ? 543 : 0
  const dateBegin = dayjs(begin).add(yearOffset, 'year')
  const dateQuit = quit ? dayjs(quit).add(yearOffset, 'year') : dayjs()
  
  // Calculate time difference
  const year = dateQuit.diff(dateBegin, 'year')
  const month = dateQuit.diff(dateBegin, 'month') % (year > 0 ? 12 : Infinity)
  const dayOnly = !month && !year
  
  // Calculate remaining days (only if needed)
  const day = dayOnly ? dateQuit.diff(dateBegin, 'day') : 
              Math.round(dateQuit.diff(dateBegin, 'day') % 30.437)
  
  // Format period text
  const periodText = [
    year ? `${year} ${t('date.year')}` : '',
    month ? `${month} ${t('date.month')}` : '',
    day && !year ? `${day} ${t('date.day')}` : ''
  ].filter(Boolean).join(' ')
  
  // Format date display
  const beginText = dateBegin.format(`${dayOnly ? 'D ' : ''}MMMM YYYY`)
  const quitText = quit ? `${dateQuit.format(`${dayOnly ? 'D ' : ''}MMMM YYYY`)} (${periodText})` : t('date.present')
  
  return `${beginText} â€” ${quitText}`
}

interface Props {
  resume: any;
  experience?: any;
}

import expData from  '../i18n/experience.json'
import resumeData from  '../i18n/resume.en.json'
const { experience = expData, resume = resumeData } = Astro.props;

---

<Layout title={`${resume.fullname} | ${resume.job}`} desc="Hey there, I\'m Kananek Thongkam and work as Software Engineer.">
  <div class="resume">
    <SectionHeader resume={resume} experience={experience} />
    <div class="container">
      <SectionProject experience={experience} />
      <SectionContact experience={experience} />
      <SectionCoding />
      <SectionDaytime />
      <SectionHistory />
      <SectionSkill experience={experience} />
      <SectionEducation resume={resume} />
    </div>
    <p class="pagebreak" />
    {resume.work.map(e => !e.pagebreak ? (
      <section class="py-3">
        <div class="container">
          <div class="row">
            <div class="col-lg-9 col-md-11">
              <div class="mb-4">
                <h2>{t('experience')}</h2>
                {isNewJob(e.range.begin) ? (<span class="bg-green-500 text-white px-2 py-1 rounded-md mt-4 inline-block">{t('experience.newjob')}</span>):(<span />)}
              </div>
            </div>
            <div class="col-lg-27 col-md-25 col-sm-36 mb-5">
              <small class="-mt-0.5 block text-gray-600 dark:text-gray-400">
                {getWorkPeriod(e.range)}
              </small>
              {!e.jobs && (<h3 class="m-0 mb-2.5 leading-none font-bold uppercase">{e.job}</h3>)}
              <h4 class="m-0 leading-none">{e.work}</h4>
              {!e.jobs && (<SectionWork filename={e.file} />)}
              <div class="pt-4">
                {e.jobs && e.jobs.map(j => (
                <div class="py-2.5">
                  <h3 class="m-0 font-bold uppercase">{j.job}</h3>
                  <small class="text-gray-600 dark:text-gray-400">{getWorkPeriod(j.range)}</small>
                  <SectionWork filename={j.file} />
                </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>
    ) : (<p class="pagebreak" />))}
    <SectionFooter />
  </div>
</Layout>
